package it.crem.server.actions;

import java.util.ArrayList;

import javax.servlet.ServletInputStream;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;
import org.apache.struts2.interceptor.ServletRequestAware;
import org.apache.struts2.interceptor.ServletResponseAware;

import it.ash.mail.SendMail;
import it.crem.common.Utility;
import it.crem.db.conf.Ragazzi;
import it.crem.db.mng.DbMngExt;

import com.opensymphony.xwork2.ActionSupport;

public class Welcome extends RoncoAction implements
ServletRequestAware,ServletResponseAware  {
	private static Logger logger = Logger.getLogger(Utility.class);
	private String from=null;
	private String subject=null;
	private String body = null;
	private String esito = null;
	private String url = null;
	private String doc = null;
	private Integer ragazzoOid = null;
	private String pdf = null;
	private HttpServletRequest request;
    private HttpServletResponse response;
   
	
	
	public String sendPdf(){
		String mail = null;
		String name = null;
		SendMail sm = new SendMail();
		ArrayList<String> dests = new ArrayList<String>();
		
		try{
			DbMngExt db = new DbMngExt();
			if ((ragazzoOid!=null)&&(ragazzoOid>0)){
				Ragazzi r = (Ragazzi)db.getObject(ragazzoOid,"Ragazzi");
				if (r!=null){
					name = r.getCognome()+"-"+r.getNome();
					if (name!=null)
						name = name.replaceAll("\b", "_");
					if ((r.getEmailMadre()!=null)&&(!"".equals(r.getEmailMadre())))
						mail=r.getEmailMadre();
					else
						mail = r.getEmailPadre();
					dests.add(mail);
					dests.add(Utility.MAIL.getString("mail.fattura.dest"));
					logger.debug("mail di invio: " + mail);
					
				}else{
					logger.debug("ragazzo non trovato: "+ragazzoOid);
				}
			}else{
				logger.debug("oid ragazzo non fornito in input: "+ragazzoOid);
			}
			
			ServletInputStream in = request.getInputStream();
			StringBuffer sb = new StringBuffer();
			int c=0;
			while ((c=in.read())!=-1){
				sb.append((char)c);
			}
			doc = sb.toString();
			doc = Utility.updateEuro(doc);
			logger.debug("testo da convertire: "+doc);
			String fn = "file.pdf";
			if (name!=null){
				fn = name + ".pdf";
			}
			pdf = Utility.htmlText2pdf(doc, fn);
			ArrayList<String> atts = new ArrayList<String>();
			atts.add(pdf);
			subject  = Utility.MAIL.getString("mail.fattura.subject");
			from = Utility.MAIL.getString("mail.fattura.sender");
			String body =  Utility.MAIL.getString("mail.fattura.text") + name;
			String html = "<html><body>"+body+"</body></html>";
			
			
			String msglog = "invio messaggio:  "+body+"\na: "+mail;
			/*
			String destinatari  = Utility.MAIL.getString("mail.dest.list");
			if (destinatari!=null){
				String[] list = destinatari.split(",");
				if (list!=null){
					for (int i=0;i<list.length;i++){
						dests.add(list[i]);
						msglog = msglog + ", " + list[i];
					}
				}
			}
			*/
			sm.sender(from, subject, dests, body, html, atts);
			logger.debug("inviato messaggio: " +msglog + " da " + from);
			ServletOutputStream out = response.getOutputStream();
			out.println(pdf);
			
		}
		catch (Exception E){
			E.printStackTrace();
		}
		return null;
	}
	private String getHtml(){
		String html = "<html><body><center><b>Richiesta Informazioni</b></center><br/><br/>";
		
		
		html = html+"<table>";
		html = html + "<tr><td>From:</td><td>"+from+"</td></tr>";
		html = html + "<tr><td>Subject:</td><td>"+subject+"</td></tr>";
		html = html + "<tr><td colspan=\"2\">"+body+"</td></tr>";
		html = html + "</table></body></html>";
		
		return html;
	}
	
	public String send(){
		SendMail sm = new SendMail();
		String destinatari  = Utility.MAIL.getString("mail.dest.list");
		String html = getHtml();
		ArrayList<String> dests = new ArrayList<String>(); 
		if (destinatari!=null){
			String[] list = destinatari.split(",");
			if (list!=null){
				for (int i=0;i<list.length;i++)
					dests.add(list[i]);
				sm.sender(from, "Richiesta Informazioni", dests, "", html, null);
				esito = "Mail inviata con successo da : " +from;
			}else{
				esito = "Non &egrave; possibile inviare la mail: riprovare in seguito";
			}
			
		}else{
			esito = "Non &egrave; possibile inviare la mail: riprovare in seguito";
		}
		
		return SUCCESS;
	}
	
	public String welcome(){
		url = Utility.RONCO.getString("ronco.url");
		return SUCCESS;
	}

	public String show(){
		
		url = Utility.RONCO.getString("ronco.url");
		return SUCCESS;
	}

	public String getFrom() {
		return from;
	}

	public void setFrom(String from) {
		this.from = from;
	}

	public String getSubject() {
		return subject;
	}

	public void setSubject(String subject) {
		this.subject = subject;
	}

	public String getBody() {
		return body;
	}

	public void setBody(String body) {
		this.body = body;
	}

	public String getEsito() {
		return esito;
	}

	public void setEsito(String esito) {
		this.esito = esito;
	}

	public String getUrl() {
		return url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	public String getDoc() {
		return doc;
	}

	public void setDoc(String doc) {
		this.doc = doc;
	}

	public Integer getRagazzoOid() {
		return ragazzoOid;
	}

	public void setRagazzoOid(Integer ragazzoOid) {
		this.ragazzoOid = ragazzoOid;
	}
	public String getPdf() {
		return pdf;
	}
	public void setPdf(String pdf) {
		this.pdf = pdf;
	}
	@Override
	public void setServletResponse(HttpServletResponse response) {
		// TODO Auto-generated method stub
		this.response=response;
	}
	@Override
	public void setServletRequest(HttpServletRequest request) {
		// TODO Auto-generated method stub
		this.request=request;
	}
	public HttpServletRequest getRequest() {
		return request;
	}
	public void setRequest(HttpServletRequest request) {
		this.request = request;
	}
	public HttpServletResponse getResponse() {
		return response;
	}
	public void setResponse(HttpServletResponse response) {
		this.response = response;
	}

	
	
	
	
}
